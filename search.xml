<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>hexo从GitHub上克隆到本地-恢复使用</title>
      <link href="/2025/05/10/hexo-cong-github-shang-ke-long-dao-ben-di-hui-fu-shi-yong/"/>
      <url>/2025/05/10/hexo-cong-github-shang-ke-long-dao-ben-di-hui-fu-shi-yong/</url>
      
        <content type="html"><![CDATA[<div class="toc"><!-- toc --><ul><li><a href="#hexo-cong-github-shang-ke-long-dao-ben-di-hui-fu-shi-yong">hexo从GitHub上克隆到本地-恢复使用</a><ul><li><a href="#yi-pei-zhi-huan-jing">一、配置环境</a></li><li><a href="#er-pei-zhi-ben-di-bo-ke">二.配置本地博客</a></li><li><a href="#san-sheng-cheng-bu-shu">三.生成、部署</a></li><li><a href="#bei-fen">备份</a><ul><li><a href="#ke-long-github-shang-mian-sheng-cheng-de-jing-tai-wen-jian-dao-ben-di">克隆gitHub上面生成的静态文件到本地</a></li></ul></li></ul></li></ul><!-- tocstop --></div><h1><span id="hexo-cong-github-shang-ke-long-dao-ben-di-hui-fu-shi-yong">hexo从GitHub上克隆到本地-恢复使用</span><a href="#hexo-cong-github-shang-ke-long-dao-ben-di-hui-fu-shi-yong" class="header-anchor">#</a></h1><h2><span id="yi-pei-zhi-huan-jing">一、配置环境</span><a href="#yi-pei-zhi-huan-jing" class="header-anchor">#</a></h2><p>1.安装git</p><p><code>https://git-scm.com/downloads</code></p><p>2.Git与远程库进行SSH授权(点击查看教程Git的安装-与远程仓库GitHub配置)</p><p>3.安装node.js</p><p><code>https://nodejs.org/en/</code> </p><h2><span id="er-pei-zhi-ben-di-bo-ke">二.配置本地博客</span><a href="#er-pei-zhi-ben-di-bo-ke" class="header-anchor">#</a></h2><p>1.克隆GitHub上保存的hexo网站原文件</p><p><code>git clone 你的仓库地址</code></p><p>2.安装hexo</p><p>进入克隆的目录，执行：</p><p><code>npm install -g hexo-cli</code></p><p>3.生成缺少的网站文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><h2><span id="san-sheng-cheng-bu-shu">三.生成、部署</span><a href="#san-sheng-cheng-bu-shu" class="header-anchor">#</a></h2><p><code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</code></p><h2><span id="bei-fen">备份</span><a href="#bei-fen" class="header-anchor">#</a></h2><h3><span id="ke-long-github-shang-mian-sheng-cheng-de-jing-tai-wen-jian-dao-ben-di">克隆gitHub上面生成的静态文件到本地</span><a href="#ke-long-github-shang-mian-sheng-cheng-de-jing-tai-wen-jian-dao-ben-di" class="header-anchor">#</a></h3><p><code>git clone https://github.com/你的用户名/你的用户名.github.io.git</code><br>把克隆到本地的文件除了git的文件都删掉</p><p>将之前使用hexo写博客时候的整个目录（所有文件）搬过来。把该忽略的文件忽略了</p><p><code>touch .gitignore</code><br>创建一个叫back的分支</p><p><code>git checkout -b back</code><br>提交复制过来的文件到暂存区</p><p><code>git add --all</code><br>提交</p><p><code>git commit -m &quot;新建分支源文件&quot;</code><br>推送分支到github</p><p><code>git push origin back</code><br>到这里基本上就搞定了，以后再推就可以直接git push了，hexo的操作跟以前一样。</p><p>今后无论什么时候想要在其他电脑上面用hexo写博客，就直接把创建的分支克隆下来，npm install安装依赖之后就可以用了。</p><p>克隆分支的操作</p><p><code>git clone https://github.com/yourname/hexo-test.github.io.git</code></p><p>这样做完了以后，每次写完博客发布之后git push把源文件推到分支上。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用hexo搭建个人博客</title>
      <link href="/2025/05/09/shi-yong-hexo-da-jian-ge-ren-bo-ke/"/>
      <url>/2025/05/09/shi-yong-hexo-da-jian-ge-ren-bo-ke/</url>
      
        <content type="html"><![CDATA[<div class="toc"><!-- toc --><ul><li><a href="#shi-yong-hexo-da-jian-ge-ren-bo-ke">使用hexo搭建个人博客</a><ul><li><a href="#an-zhuang-hexo">安装Hexo</a></li><li><a href="#qie-huan-zhu-ti">切换主题</a></li><li><a href="#guan-lian-github">关联github</a></li><li><a href="#ssh-keys-de-pei-zhi">SSH keys的配置</a></li><li><a href="#pei-zhi-ssh-he-github-cang-ku">配置ssh和github仓库</a></li><li><a href="#ce-shi-bing-lian-jie-dao-git">测试并链接到Git</a></li><li><a href="#zhu-yi-shi-xiang">注意事项</a><ul><li><a href="#zhu-yi">注意</a></li><li><a href="#tui-jian-cha-jian">推荐插件</a></li></ul></li></ul></li></ul><!-- tocstop --></div><h1><span id="shi-yong-hexo-da-jian-ge-ren-bo-ke">使用hexo搭建个人博客</span><a href="#shi-yong-hexo-da-jian-ge-ren-bo-ke" class="header-anchor">#</a></h1><h2><span id="an-zhuang-hexo">安装Hexo</span><a href="#an-zhuang-hexo" class="header-anchor">#</a></h2><p>安装hexo之前，要先下载安装Node.js和Git，百度搜索找到下载即可。</p><p>Git下载地址: </p><p><code>https://git-scm.com/downloads</code></p><p>Node.js下载地址:</p><p><code>https://nodejs.org/en/</code> </p><p><img src="/2025/05/09/shi-yong-hexo-da-jian-ge-ren-bo-ke/Node.png" alt="Node"></p><p>在本地建立一个文件夹，我的文件夹为D:github&#x2F;hexotest。 </p><p>接下来可以进入这个文件夹右键Git Bash 或者通过命令号cmd进入这个文件夹 </p><p>输入如下命令： </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g #安装hexo</span><br><span class="line">#初始化网站  </span><br><span class="line">hexo init    </span><br><span class="line">#下载hexo</span><br><span class="line">npm install</span><br><span class="line">#生成或 hexo generate      </span><br><span class="line">hexo g</span><br><span class="line">#启动本地服务器 </span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>重启命令, 更新并且上传：</p><p><code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</code> </p><p>通过<a href="http://localhost:4000/">http://localhost:4000</a> 查看效果 </p><p>如果无法显示，那么可能是端口被占用 </p><p><code>hexo server -p 6666</code> </p><p>指定端口启动，可看到网页了 </p><h2><span id="qie-huan-zhu-ti">切换主题</span><a href="#qie-huan-zhu-ti" class="header-anchor">#</a></h2><p>默认主题为landscape，比较简陋，可以自己下载喜欢的主题，将下载的主题放到themes文件夹下，并且修改_config.yml可以实现主题的替换。</p><h2><span id="guan-lian-github">关联github</span><a href="#guan-lian-github" class="header-anchor">#</a></h2><p>安装该扩展主要是为了支持hexo d 命令。</p><p><code>npm install hexo-deployer-git --save</code></p><p>编辑根目录下_config.yml文件 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">    type: git</span><br><span class="line">    repo: git@github.com:secondtonone1/secondtonone1.github.io.git  #这里的网址填你自己的</span><br><span class="line">    branch: main</span><br></pre></td></tr></table></figure><h2><span id="ssh-keys-de-pei-zhi">SSH keys的配置</span><a href="#ssh-keys-de-pei-zhi" class="header-anchor">#</a></h2><p>在Git 命令行输入如下命令：</p><p><code>ssh-keygen -t rsa -C &quot;GitHub的注册邮箱&quot;</code> </p><p>Git显示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C &quot;GitHub的注册邮箱&quot;</span><br><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file in which to save the key (/Users/your_user_directory/.ssh/id_rsa):  (输入回车)</span><br></pre></td></tr></table></figure><p>系统会要求你输入密码，这里设置的密码主要是在你提交Git时弹出密码认证，不想输入直接回车</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Enter passphrase (empty for no passphrase): (输入回车或者密码) </span><br><span class="line">Enter same passphrase again: (输入回车或者密码)</span><br></pre></td></tr></table></figure><h2><span id="pei-zhi-ssh-he-github-cang-ku">配置ssh和github仓库</span><a href="#pei-zhi-ssh-he-github-cang-ku" class="header-anchor">#</a></h2><p>找到id_rsa.pub 并复制文件内容 </p><p>id_rsa.pub文件一般位于电脑用户配置文件夹下的一个.ssh文件下C:Users你的用户名.ssh </p><p>登录Github并添加密钥 </p><p>进入github首页在右上角选择settings设置。</p><h2><span id="ce-shi-bing-lian-jie-dao-git">测试并链接到Git</span><a href="#ce-shi-bing-lian-jie-dao-git" class="header-anchor">#</a></h2><p>链接Git</p><p><code>ssh -T git@github.com</code></p><p>以下为成功链接到Git</p><p><code>Hi XXXX! You&#39;ve successfully authenticated, but GitHub does not provide shell access.</code></p><p>以后每次提交博文到github就不需要输入密码了，很方便。配置好后清除之前的记录，重新生成并提交</p><p><code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</code></p><h2><span id="zhu-yi-shi-xiang">注意事项</span><a href="#zhu-yi-shi-xiang" class="header-anchor">#</a></h2><h3><span id="zhu-yi">注意</span><a href="#zhu-yi" class="header-anchor">#</a></h3><p>部分需要单独安装 hexo 的渲染包</p><p><code>npm i hexo-renderer-swig</code></p><h3><span id="tui-jian-cha-jian">推荐插件</span><a href="#tui-jian-cha-jian" class="header-anchor">#</a></h3><h4><span id="bo-wen-tian-jia-tu-pian">博文添加图片</span><a href="#bo-wen-tian-jia-tu-pian" class="header-anchor">#</a></h4><p><code>npm install hexo-asset-image –save</code></p><p>修改文档_config.yml添加以下内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">marked:</span><br><span class="line">  prependRoot: true</span><br><span class="line">  postAsset: true</span><br></pre></td></tr></table></figure><p>然后就可以在md文件中使用, <img src="/test.jpg" alt="test"></p><p>如果图片无法显示可能需要修改hexo-asset-image插件，修改node_modules\hexo-asset-image\index.js：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">&#x27;use strict&#x27;;</span><br><span class="line">var cheerio = require(&#x27;cheerio&#x27;);</span><br><span class="line"></span><br><span class="line">// http://stackoverflow.com/questions/14480345/how-to-get-the-nth-occurrence-in-a-string</span><br><span class="line">function getPosition(str, m, i) &#123;</span><br><span class="line">  return str.split(m, i).join(m).length;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var version = String(hexo.version).split(&#x27;.&#x27;);</span><br><span class="line">hexo.extend.filter.register(&#x27;after_post_render&#x27;, function(data)&#123;</span><br><span class="line">  var config = hexo.config;</span><br><span class="line">  if(config.post_asset_folder)&#123;</span><br><span class="line">    var link = data.permalink;</span><br><span class="line">if(version.length &gt; 0 &amp;&amp; Number(version[0]) == 3)</span><br><span class="line">   var beginPos = getPosition(link, &#x27;/&#x27;, 1) + 1;</span><br><span class="line">else</span><br><span class="line">   var beginPos = getPosition(link, &#x27;/&#x27;, 3) + 1;</span><br><span class="line">// In hexo 3.1.1, the permalink of &quot;about&quot; page is like &quot;.../about/index.html&quot;.</span><br><span class="line">var endPos = link.lastIndexOf(&#x27;/&#x27;) + 1;</span><br><span class="line">    link = link.substring(beginPos, endPos);</span><br><span class="line"></span><br><span class="line">    var toprocess = [&#x27;excerpt&#x27;, &#x27;more&#x27;, &#x27;content&#x27;];</span><br><span class="line">    for(var i = 0; i &lt; toprocess.length; i++)&#123;</span><br><span class="line">      var key = toprocess[i];</span><br><span class="line"> </span><br><span class="line">      var $ = cheerio.load(data[key], &#123;</span><br><span class="line">        ignoreWhitespace: false,</span><br><span class="line">        xmlMode: false,</span><br><span class="line">        lowerCaseTags: false,</span><br><span class="line">        decodeEntities: false</span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      $(&#x27;img&#x27;).each(function()&#123;</span><br><span class="line">if ($(this).attr(&#x27;src&#x27;))&#123;</span><br><span class="line">// For windows style path, we replace &#x27;\&#x27; to &#x27;/&#x27;.</span><br><span class="line">var src = $(this).attr(&#x27;src&#x27;).replace(&#x27;\\&#x27;, &#x27;/&#x27;);</span><br><span class="line">if(!/http[s]*.*|\/\/.*/.test(src) &amp;&amp;</span><br><span class="line">   !/^\s*\//.test(src)) &#123;</span><br><span class="line">  // For &quot;about&quot; page, the first part of &quot;src&quot; can&#x27;t be removed.</span><br><span class="line">  // In addition, to support multi-level local directory.</span><br><span class="line">  var linkArray = link.split(&#x27;/&#x27;).filter(function(elem)&#123;</span><br><span class="line">return elem != &#x27;&#x27;;</span><br><span class="line">  &#125;);</span><br><span class="line">  var srcArray = src.split(&#x27;/&#x27;).filter(function(elem)&#123;</span><br><span class="line">return elem != &#x27;&#x27; &amp;&amp; elem != &#x27;.&#x27;;</span><br><span class="line">  &#125;);</span><br><span class="line">  if(srcArray.length &gt; 1)</span><br><span class="line">srcArray.shift();</span><br><span class="line">  src = srcArray.join(&#x27;/&#x27;);</span><br><span class="line">  $(this).attr(&#x27;src&#x27;, config.root + link + src);</span><br><span class="line">  console.info&amp;&amp;console.info(&quot;update link as:--&gt;&quot;+config.root + link + src);</span><br><span class="line">&#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">console.info&amp;&amp;console.info(&quot;no src attr, skipped...&quot;);</span><br><span class="line">console.info&amp;&amp;console.info($(this));</span><br><span class="line">&#125;</span><br><span class="line">      &#125;);</span><br><span class="line">      data[key] = $.html();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4><span id="ping-lun-gong-neng">评论功能</span><a href="#ping-lun-gong-neng" class="header-anchor">#</a></h4><p><code>https://console.leancloud.cn/</code></p><p>注册账号并实名后，进入控制台后主页点击创建应用，选择开发版，我们点击进入，查看左侧边栏的设置中的应用凭证部分，就能看到你的APP ID和APP Key了</p><p>修改_config_butterfly.yml，添加如下配置代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">valine:</span><br><span class="line">  appId: # leancloud application app id</span><br><span class="line">  appKey: # leancloud application app key</span><br><span class="line">  avatar: monsterid # gravatar style https://valine.js.org/#/avatar</span><br><span class="line">  serverURLs: # This configuration is suitable for domestic custom domain name users, overseas version will be automatically detected (no need to manually fill in)</span><br><span class="line">  bg: # valine background</span><br><span class="line">  visitor: false</span><br><span class="line">  option:</span><br></pre></td></tr></table></figure><h4><span id="wen-zhang-zhi-ding">文章置顶</span><a href="#wen-zhang-zhi-ding" class="header-anchor">#</a></h4><p>支持置顶与隐藏文章的 Hexo 首页生成器插件。</p><p>在官方的首页生成器的基础上添加了使用 top 置顶文章和 hide 隐藏文章的功能。</p><p>在文章的front-matter区域里添加top: 1属性来把这篇文章置顶。数值越大，置顶的优先级越大。</p><p>首先卸载掉已经安装的 generator-index 类插件，然后安装本插件。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall hexo-generator-index</span><br><span class="line">npm install hexo-generator-index-custom --save</span><br></pre></td></tr></table></figure><p>在 _config.yml 中新增或修改如下配置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">index_generator:</span><br><span class="line">  path: &#x27;&#x27;</span><br><span class="line">  per_page: 10</span><br><span class="line">  order_by: -date</span><br><span class="line">  pagination_dir: page</span><br></pre></td></tr></table></figure><h4><span id="zi-shu-tong-ji">字数统计</span><a href="#zi-shu-tong-ji" class="header-anchor">#</a></h4><p><code>npm i --save hexo-wordcount</code></p><p>修改文档_config.butterfly.yml</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wordcount:</span><br><span class="line">  enable: true</span><br><span class="line">  post_wordcount: true</span><br><span class="line">  min2read: true</span><br><span class="line">  total_wordcount: true</span><br></pre></td></tr></table></figure><h4><span id="ben-di-sou-suo">本地搜索</span><a href="#ben-di-sou-suo" class="header-anchor">#</a></h4><p><code>npm install hexo-generator-searchdb --save</code></p><p>修改文档_config.yml添加以下内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  content: true</span><br><span class="line">  format: html</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">path：表示搜索后生成的文件路径，可以生成xml和json两种格式；将path设置为“content.json”就可以替代第二个插件。</span><br><span class="line">field：表示搜索的范围，有“post、page和all”三种值。</span><br><span class="line">    post：所有的文章；</span><br><span class="line">    page：所有顶部导航选项的页面；</span><br><span class="line">    all：所有的文章和顶部导航选项的页面。</span><br><span class="line">content：是否包含搜索到的文章的全部内容。如果false，生成的结果只包括标题和创建时间这些信息，没有文章主体。默认情况下是true.</span><br><span class="line">format：搜索到的内容、选项的格式。</span><br><span class="line">    html(默认)：将html原文本缩略。</span><br><span class="line">    striptags：将html原文本缩略，并删除所有标记。</span><br><span class="line">    raw：记下每一篇文章或每一页的文字。</span><br></pre></td></tr></table></figure><p>修改文档_config.butterfly.yml</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 本地搜索</span><br><span class="line">local_search:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure><h4><span id="hexo-toc-sheng-cheng-mu-lu">hexo-toc生成目录</span><a href="#hexo-toc-sheng-cheng-mu-lu" class="header-anchor">#</a></h4><p><code>npm install hexo-toc --save</code></p><p>修改文档_config.yml添加以下内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">toc:</span><br><span class="line">  maxdepth: 3</span><br><span class="line">  class: toc</span><br><span class="line">  slugify: transliteration</span><br><span class="line">  decodeEntities: false</span><br><span class="line">  anchor:</span><br><span class="line">    position: after</span><br><span class="line">    symbol: &#x27;#&#x27;</span><br><span class="line">    style: header-anchor</span><br></pre></td></tr></table></figure><p>在 Markdown 文件中使用 TOC</p><p>在需要显示目录的地方，添加以下标记：</p><h4><span id="zhong-wen-lian-jie-zhuan-pin-yin-hexo-permalink-pinyin">中文链接转拼音hexo-permalink-pinyin</span><a href="#zhong-wen-lian-jie-zhuan-pin-yin-hexo-permalink-pinyin" class="header-anchor">#</a></h4><p>&#96;&#96;</p><p>修改文档_config.yml添加以下内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">permalink_pinyin:</span><br><span class="line">  enable: true</span><br><span class="line">  separator: &#x27;-&#x27; # default: &#x27;-&#x27;</span><br></pre></td></tr></table></figure><h4><span id="dai-ma-gao-liang">代码高亮</span><a href="#dai-ma-gao-liang" class="header-anchor">#</a></h4><p>&#96;&#96;</p><p>修改文档_config.yml</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">prism_plugin:</span><br><span class="line">  mode: &#x27;preprocess&#x27;    # realtime/preprocess</span><br><span class="line">  theme: &#x27;tomorrow&#x27;     #主题选项</span><br><span class="line">  line_number: true    # default false</span><br><span class="line">  custom_css:</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> github </tag>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
